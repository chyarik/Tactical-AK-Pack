class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle: Default {};
	class Ship: Vehicle
	{
		skeletonInherit="Vehicle";
		skeletonBones[]=
		{
			"otocvez",
			"",
			"otochlaven",
			"otocvez",
			"volant",
			"",
			"radar",
			""
		};
	};
	class civilian_boatSkeleton: Ship
	{
		skeletonInherit = "ship";
		skeletonBones[] = 
		{
			"fuel","",
			"rpm","",
			"mph","",
			"prop_batt","",
			"prop_oil","",
			"prop_trim","",
			"prop_water","",
			"Throttle","",
			"drivingWheel","",
			"engine1","",
			"engine2","",			
			"propeller1","engine1",			
			"propeller2","engine2",
			"Police","",
			"beacon","Police",
			"Beacon1","beacon",
			"Beacon2","beacon",
			"Beacon3","beacon",
			"Beacon4","beacon",
			"Beacon5","beacon",
			"Beacon6","beacon",	
			"damageHide",""			
		};
	};
};						

class CfgModels
{
	class Rotation 
	{
		type = "rotation";
		memory = 1;
		minValue = 0;
		maxValue = 1;
		angle0 = 0;
		angle1 = 1;
	};
	class Default
	{
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};	
	class Vehicle: Default
	{
		sections[] =
		{
			"cislo",
			"grupa",
			"side",
			"sektor",
			"clan",
			"clan_sign",
			"podsvit pristroju",
			"poskozeni",
			"L svetlo",
			"P svetlo",
			"zasleh"
		};
	};
	class Test_Boat_01: Vehicle
	{
		skeletonName = "civilian_boatSkeleton";
		sections[] = 
		{
			"camo",
			"camo2",
			"zbytek",
			"L svetlo",
			"engine"
		};
		class Animations
		{
			class Damagehide
			{
				type = "hide";
				source = "damage";
				selection = "damageHide";			
			};		
			class HidePolice: damageHide
			{
				selection = "Police";
				source = "Proxy";					
				animPeriod = 0;			
			};			
			class damageHidePolice: damageHide
			{
				selection = "Police";		
			};		
			class drivingWheel
			{
				type = "rotation";
				source = "drivingWheel";
				selection = "drivingWheel";
				axis = "drivingWheel_axis";
				memory = 1;
				minValue = -1;
				maxValue = 1;
				angle0 = -2;
				angle1 = 2;
			};
			class propeller1
			{
				type = "rotation";
				source = "rotor";
				selection = "propeller1";
				axis = "propeller1_axis";
				memory = 1;
				sourceAddress = "loop";
				minValue = -1.000000;
				maxValue = 1.000000;
				angle0 = (rad 0);
				angle1 = (rad +2880);
			};
			class propeller2: propeller1
			{
				selection = "propeller2";
				axis = "propeller2_axis";
			};
			class engine1: drivingWheel
			{
				selection = "engine1";
				axis = "engine1_axis";
				angle0 = 1.308997;
				angle1 = -1.308997;
			};		
			class engine2: engine1
			{	
				selection = "engine2";
				axis = "engine2_axis";
			};	
			///Instruments			
			class IndicatorSpeed
			{
				type = "rotation";			
				source = "speed";
				selection = "mph";
				axis = "mph_axis";
				memory = 1;
				maxValue = 32;
				angle0 = (rad -135);
				angle1 = (rad +35);
			};
			class fuel
			{
				type = "rotation";
				source = "fuel";
				selection = "fuel";
				axis = "fuel_axis";
				memory = 1;
				minValue = 0;
				maxValue = 1;
				angle0 = (rad -35);
				angle1 = (rad +35);
			};
			class IndicatorRPM
			{
				type = "rotation";
				source = "rpm";
				selection = "rpm";
				axis = "rpm_axis";
				memory = 1;
				minValue = 0;
				maxValue = 1200;
				angle0 = (rad -135);
				angle1 = (rad +110);
			};
			class Throttle: IndicatorRPM
			{
				selection = "Throttle";
				axis = "Throttle_axis";
				angle0 = (rad +28);
				angle1 = (rad -28);
			};			
			class prop_batt: IndicatorRPM
			{
				selection = "prop_batt";
				axis = "prop_batt_axis";
				maxValue = 1;				
				angle0 = (rad -35);
				angle1 = (rad +5);
			};
			
			class prop_oil: prop_batt
			{
				selection = "prop_oil";
				axis = "prop_oil_axis";
				angle1 = (rad +15);				
			};				
			class prop_water: prop_batt
			{
				selection = "prop_water";
				axis = "prop_water_axis";			
			};		
			class prop_trim
			{
				type = "rotation";			
				source = "horizonDive";
				selection = "prop_trim";
				axis = "prop_trim_axis";
				minValue = (rad -35);
				maxValue = (rad +35);
				angle0 = (rad +35);
				angle1 = (rad -40);
			};				
			///Instruments			
			///Beacons
			class Beacon1
			{
				type = "Hide";
				selection = "Beacon1";
				source = "time";		
				animPeriod = 0;	
				sourceAddress = "loop";
				minValue = -0.20;
				maxValue = +0.20;
				hideValue = "0.2";	
			};
			class BeaconsStart: Beacon1
			{
				selection = "beacon";
				source = "Beacons";		
				sourceAddress = "clamp";
				minValue = 00.00;
				maxValue = 1.0;
				hideValue = "0.0";	
				unHideValue = "1.0";	
			};		
			class Beacon2: Beacon1
			{	
				selection = "Beacon2";						
				minValue = -0.18;
				maxValue = +0.18;
				hideValue = "0.15";				
			};
			
			class Beacon3: Beacon1
			{	
				selection = "Beacon3";					
				minValue = -0.18;
				maxValue = +0.18;
				hideValue = "0.15";				
			};					
			
			class Beacon4: Beacon1
			{	
				selection = "Beacon4";		
				minValue = -0.20;
				maxValue = +0.20;
				hideValue = "0.2";	
			};			
			///Beacons
		};
	};
};

